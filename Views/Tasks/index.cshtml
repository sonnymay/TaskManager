@model IEnumerable<TaskManager.Models.TodoTask>

@{
    ViewData["Title"] = "Tasks";
}

<h1>Tasks</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<div class="row mb-3">
    <div class="col">
        <div class="btn-group">
            <a asp-action="Index" class="btn btn-outline-primary">All</a>
            <a asp-action="Index" asp-route-filterStatus="active" class="btn btn-outline-primary">Active</a>
            <a asp-action="Index" asp-route-filterStatus="completed" class="btn btn-outline-primary">Completed</a>
        </div>
    </div>
    <div class="col text-right">
        <button id="theme-toggle" class="btn btn-secondary">Toggle Theme</button>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Status</th>
            <th>@Html.DisplayNameFor(model => model.Title)</th>
            <th>@Html.DisplayNameFor(model => model.Description)</th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParam"]">
                    @Html.DisplayNameFor(model => model.DueDate)
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PrioritySortParam"]">
                    Priority
                </a>
            </th> <!-- Updated column -->
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    <form asp-action="ToggleComplete" asp-route-id="@item.Id" method="post">
                        <input type="checkbox" @(item.IsCompleted ? "checked" : "") onchange="this.form.submit()" />
                    </form>
                </td>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@Html.DisplayFor(modelItem => item.DueDate)</td>
                <td class="@(item.Priority == TaskManager.Models.PriorityLevel.High ? "text-danger" : item.Priority == TaskManager.Models.PriorityLevel.Medium ? "text-warning" : "text-success")">
                    @Html.DisplayFor(modelItem => item.Priority)
                </td> <!-- Updated data -->
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        document.querySelector("#theme-toggle").addEventListener("click", () => {
            document.body.classList.toggle("dark-theme");
        });
    </script>
}